/**
 *	快速排序
 * 	定义一个key,从左到右定义一个大于key的数Ai,从右到左查找第一个小于key的数Aj,交换两个数的位置
 *  重复上述过程，直到i=j
 *  最后交换Ai和key的位置
 * 平均时间复杂度：O(nlogn)，最坏时间复杂度：O(n^2)
 */
 
 public void quickSort(int nums[],int low,int high){
	if(low>high) return;
	int key=nums[0];
	int i=low;
	int j=high;
	while(i!=j){
		if(i<j&&nums[j]>key){
			j--;
		}
		if(i<j&&nums[i]<key){
			i++;
		}
		if(i<j){
			//交换两个数的位置
		}
	}
	//交换key和nums[i]的位置
	int t=nums[0];
	nums[0]=nums[i];
	nums[i]=t;
	//对key左边的进行快排
	quickSort(nums,low,i-1);
	//对key右边的进行快排
	quickSort(nums,i+1,high);
 }